@model ECommerceMVC.Data.Menu
@{
    ViewData["Title"] = "Menu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    #mdThemMoi .modal-dialog{
        min-width: 60%;
    }
</style>
<div>
    <div class="card">
        <div class="card-header">
            <a href="#" class="btn btn-primary" id="btnThemMoi">Thêm mới</a>
        </div>
        <div class="card-body">
            <div id="GridData"></div>
        </div>
    </div>
</div>

<div class="modal fade"  role="dialog" id="mdThemMoi">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input  type="hidden" id="MenuId"/>
                <div class="form-group">
                    <label>Tên menu</label>
                    <input type="text" class="form-control" id="MenuName">
                </div>
                <div class="form-group">
                    <label for="">Đường dẫn</label>
                    <input type="text" class="form-control" id="MenuUrl">
                </div>
                <div class="form-group">
                    <label for="">Icon</label>
                    <input type="text" class="form-control" id="MenuIcon">
                </div>
                <div class="form-group">
                    <label>Menu cha</label>
                    @Html.DropDownListFor(model => model.MenuIdParent, (SelectList)ViewBag.MenuSelectList, "-- Chọn --", new { @class = "form-control select2 select2-hidden-accessible" })
                </div>
                <div class="form-group">
                    <label for="">Sắp xếp</label>
                    <input type="text" class="form-control" id="OrderNumber">
                </div>
                <label class="custom-switch mt-2">
                    <input type="checkbox" name="custom-switch-checkbox" class="custom-switch-input" id="chkIsActive">
                    <span class="custom-switch-indicator"></span>
                    <span class="custom-switch-description">Hiển thị</span>
                </label>
            </div>
            <div class="modal-footer bg-whitesmoke br">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" id="btnLuu" class="btn btn-primary">Lưu thông tin</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function(){
            $('#btnThemMoi').on('click', function () {
                $('#mdThemMoi').modal('show');
                $('#mdThemMoi .modal-title').text("Thêm mới menu")
            })
            $('#btnLuu').on('click', function () {
                var model = {
                    MenuId: $('#MenuId').val(),
                    MenuName: $('#MenuName').val(),
                    OrderNumber: $('#OrderNumber').val(),
                    Icon: $('#MenuIcon').val(),
                    Url: $('#MenuUrl').val(),
                    IsActive: $('#chkIsActive').val(),
                    MenuIdParent: $('#MenuIdParent').val(),
                }

                var result = getAjax('Menu/SaveInfo',  model )
                if (result.type) {
                    LoadDataTable();
                    $('#mdThemMoi').modal('hide');
                }
            })
            LoadDataTable()
            
        })
        var fmCheckBox = function (cell) {
            return formaterCheckBox(cell.getData().isActive)
        }
        var fmBtnThaoTac = function (cell) {
            return formaterbtnThaoTac(cell.getData().menuId)
        }
        var GridData = new Tabulator("#GridData", {
            layout: "fitColumns",
            pagination: true,
            paginationSize: 50,
            paginationSizeSelector: [50, 100, 150, 200, 500, true],
            height: "550",
            HeaderVertAlign: "center",
            columns: [
                { title: "Thao tác", formatter: fmBtnThaoTac, headerHozAlign: "center", hozAlign: "center", vertAlign: "middle", visible: true, width: 100, minWidth: 80 },
                { title: "Tên menu", field: "menuName", formatter: 'textarea', headerHozAlign: "center", hozAlign: "left", vertAlign: "middle", minWidth: 200 },
                { title: "Đường dẫn", field: "url", formatter: 'textarea', headerHozAlign: "center", hozAlign: "left", vertAlign: "middle", width: 150 },
                { title: "Menu cha", field: "menuParent", formatter: "textarea", headerHozAlign: "center", hozAlign: "left", vertAlign: "middle", width: 150 },
                { title: "Sắp xếp", field: "orderNumber", formatter: 'textarea', headerHozAlign: "center", hozAlign: "right", vertAlign: "middle",  width: 100 },
                { title: "Icon", field: "icon", hozAlign: "left", headerHozAlign: "center", formatter: "textarea", vertAlign: "middle", width: 100 },
                { title: "Hiển thị", field: "isActive", headerHozAlign: "center", hozAlign: "center", vertAlign: "middle", formatter: fmCheckBox, width: 100, headerSort: false, vertAlign: "middle", headerHozAlign: "center", },
            ],
            locale: true,
            paginationCounter: "rows",
            langs: TabulatorLangsVi,
            placeholder: 'Không có dữ liệu',
        });

        function LoadDataTable() {
            GridData.clearData();
            const GetAll = getAjax("Menu/GetAllMenu");
            if (GetAll.type) {
                GridData.setData(GetAll.data);
            }
        }
    </script>
}
